Big O Notation:

Big O notation describes how the runtime of an algorithm grows with input size n. It helps analyze performance and scalability.

Best, Average & Worst Case:
Linear Search:

Best Case: O(1) (element found at the beginning)

Average Case: O(n)

Worst Case: O(n) (element not found or last element)

Binary Search (only on sorted data):

Best Case: O(1)

Average Case: O(log n)

Worst Case: O(log n)
